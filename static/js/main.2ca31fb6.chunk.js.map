{"version":3,"sources":["App.tsx","components/SortGoods/SortGoods.tsx","index.tsx"],"names":["SortType","SortGoods","goods","map","good","goodsFromServer","App","useState","default","sortType","setSortType","reverseType","setReverseType","sortedGoods","type","reverse","byAlphabet","sort","good1","good2","localeCompare","byLength","length","reverseBy","getSortedGoods","isReset","className","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SDHjBC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,sBAAAA,E,kBAAAA,E,oBAAAA,E,YAAAA,M,KAyBE,IAAMM,EAAgB,WAC3B,MAAgCC,mBAAmBP,EAASQ,SAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCH,mBAAmBP,EAASQ,SAAlE,mBAAOG,EAAP,KAAoBC,EAApB,KAEMC,EAtBR,SAAwBX,EAAiBY,EAAgBC,GACvD,IAAMF,EAAW,YAAOX,GAcxB,OAZIY,IAASd,EAASgB,YACpBH,EAAYI,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGrDL,IAASd,EAASqB,UACpBR,EAAYI,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAGtDP,IAAYf,EAASuB,WACvBV,EAAYE,UAGPF,EAOaW,CAAenB,EAAiBI,EAAUE,GAExDc,EAAUhB,IAAaT,EAASQ,SACjCG,IAAgBX,EAASQ,QAa9B,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEZ,KAAK,SACLY,UACEC,IACE,iBACA,CAAE,WAAYlB,IAAaT,EAASgB,aAGxCY,QAAS,kBAAMlB,EAAYV,EAASgB,aARtC,iCAaA,wBACEF,KAAK,SACLY,UACEC,IAAG,oBACD,CAAE,WAAYlB,IAAaT,EAASqB,WAExCO,QAAS,kBAAMlB,EAAYV,EAASqB,WANtC,4BAWA,wBACEP,KAAK,SACLY,UACEC,IAAG,oBACD,CAAE,WAAYhB,IAAgBX,EAASuB,YAE3CK,QAvCe,kBAAMhB,EAC3BD,IAAgBX,EAASuB,UACrBvB,EAASQ,QACTR,EAASuB,YA8BT,qBAWEE,GACA,wBACEX,KAAK,SACLY,UAAU,4BACVE,QArDW,WACnBlB,EAAYV,EAASQ,SACrBI,EAAeZ,EAASQ,UAgDlB,sBAUJ,cAAC,EAAD,CAAWN,MAAOW,QE9GxBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2ca31fb6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { SortGoods } from './components/SortGoods/SortGoods';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  byAlphabet = 'alphabet',\n  byLength = 'length',\n  reverseBy = 'reverse',\n  default = '',\n}\n\nfunction getSortedGoods(goods: string[], type: SortType, reverse: SortType) {\n  const sortedGoods = [...goods];\n\n  if (type === SortType.byAlphabet) {\n    sortedGoods.sort((good1, good2) => good1.localeCompare(good2));\n  }\n\n  if (type === SortType.byLength) {\n    sortedGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (reverse === SortType.reverseBy) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState<SortType>(SortType.default);\n  const [reverseType, setReverseType] = useState<SortType>(SortType.default);\n\n  const sortedGoods = getSortedGoods(goodsFromServer, sortType, reverseType);\n\n  const isReset = sortType !== SortType.default\n    || reverseType !== SortType.default;\n\n  const setResetSort = () => {\n    setSortType(SortType.default);\n    setReverseType(SortType.default);\n  };\n\n  const setReverseSort = () => setReverseType(\n    reverseType === SortType.reverseBy\n      ? SortType.default\n      : SortType.reverseBy,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-info',\n              { 'is-light': sortType !== SortType.byAlphabet },\n            )\n          }\n          onClick={() => setSortType(SortType.byAlphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-success',\n              { 'is-light': sortType !== SortType.byLength })\n          }\n          onClick={() => setSortType(SortType.byLength)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-warning',\n              { 'is-light': reverseType !== SortType.reverseBy })\n          }\n          onClick={setReverseSort}\n        >\n          Reverse\n        </button>\n\n        {(isReset) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={setResetSort}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <SortGoods goods={sortedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const SortGoods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>{good}</li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
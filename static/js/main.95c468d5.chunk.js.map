{"version":3,"sources":["App.tsx","components/SortGoods/SortGoods.tsx","index.tsx"],"names":["SortType","SortGoods","goods","map","good","goodsFromServer","App","useState","default","sortType","setSortType","reverseType","setReverseType","sortedGoods","type","reverse","sort","good1","good2","byAlphabet","localeCompare","byLength","length","getSortedGoods","isReset","className","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SDHjBC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,2BAAAA,I,uBAAAA,I,sBAAAA,M,KA2BE,IAAMM,EAAgB,WAC3B,MAAgCC,mBAAmBP,EAASQ,SAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCH,oBAAkB,GAAxD,mBAAOI,EAAP,KAAoBC,EAApB,KAEMC,EAzBR,SAAwBX,EAAiBY,EAAgBC,GACvD,IAAMF,EAAW,YAAOX,GAiBxB,OAfAW,EAAYG,MAAK,SAACC,EAAeC,GAC/B,OAAQJ,GACN,KAAKd,EAASmB,WACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKlB,EAASqB,SACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITP,GACFF,EAAYE,UAGPF,EAOaU,CAAelB,EAAiBI,EAAUE,GAExDa,EAAUf,IAAaT,EAASQ,SAAWG,EAOjD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEX,KAAK,SACLW,UACEC,IACE,iBACA,CAAE,WAAYjB,IAAaT,EAASmB,aAGxCQ,QAAS,kBAAMjB,EAAYV,EAASmB,aARtC,iCAaA,wBACEL,KAAK,SACLW,UACEC,IAAG,oBACD,CAAE,WAAYjB,IAAaT,EAASqB,WAExCM,QAAS,kBAAMjB,EAAYV,EAASqB,WANtC,4BAWA,wBACEP,KAAK,SACLW,UAAWC,IAAG,oBAAqB,CAAE,YAAaf,IAClDgB,QAAS,kBAAMf,GAA+B,IAAhBD,IAHhC,qBAQEa,GACA,wBACEV,KAAK,SACLW,UAAU,4BACVE,QA5CW,WACnBjB,EAAYV,EAASQ,SACrBI,GAAe,IAuCT,sBAUJ,cAAC,EAAD,CAAWV,MAAOW,QEtGxBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.95c468d5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { SortGoods } from './components/SortGoods/SortGoods';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  byAlphabet,\n  byLength,\n  default,\n}\n\nfunction getSortedGoods(goods: string[], type: SortType, reverse: boolean) {\n  const sortedGoods = [...goods];\n\n  sortedGoods.sort((good1: string, good2: string) => {\n    switch (type) {\n      case SortType.byAlphabet:\n        return good1.localeCompare(good2);\n      case SortType.byLength:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (reverse) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState<SortType>(SortType.default);\n  const [reverseType, setReverseType] = useState<boolean>(false);\n\n  const sortedGoods = getSortedGoods(goodsFromServer, sortType, reverseType);\n\n  const isReset = sortType !== SortType.default || reverseType;\n\n  const setResetSort = () => {\n    setSortType(SortType.default);\n    setReverseType(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-info',\n              { 'is-light': sortType !== SortType.byAlphabet },\n            )\n          }\n          onClick={() => setSortType(SortType.byAlphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-success',\n              { 'is-light': sortType !== SortType.byLength })\n          }\n          onClick={() => setSortType(SortType.byLength)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !reverseType })}\n          onClick={() => setReverseType(reverseType !== true)}\n        >\n          Reverse\n        </button>\n\n        {(isReset) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={setResetSort}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <SortGoods goods={sortedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const SortGoods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>{good}</li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
{"version":3,"sources":["App.tsx","components/SortGoods/SortGoods.tsx","index.tsx"],"names":["SortType","SortGoods","goods","map","good","goodsFromServer","App","React","useState","default","sortType","setSortType","sortedGoods","type","az","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","isReset","className","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,mFCbQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SDHjBC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,K,QAAAA,E,gBAAAA,E,kBAAAA,E,YAAAA,M,KAyBE,IAAMM,EAAgB,WAC3B,MACEC,IAAMC,SAAqB,CAACR,EAASS,QAAST,EAASS,UADzD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EArBR,SAAwBV,EAAiBW,GACvC,IAAMD,EAAW,YAAOV,GAcxB,OAZIW,EAAK,KAAOb,EAASc,IACvBF,EAAYG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGrDJ,EAAK,KAAOb,EAASmB,QACvBP,EAAYG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAGtDN,EAAK,KAAOb,EAASoB,SACvBR,EAAYQ,UAGPR,EAMaS,CAAehB,EAAiBK,GAE9CY,EAAUZ,EAAS,KAAOV,EAASS,SACpCC,EAAS,KAAOV,EAASS,QAQ9B,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEV,KAAK,SACLU,UACEC,IAAG,iBAAkB,CAAE,WAAYd,EAAS,KAAOV,EAASc,KAE9DW,QAAS,kBAAMd,EAAY,CAACX,EAASc,GAAIJ,EAAS,MALpD,iCAUA,wBACEG,KAAK,SACLU,UACEC,IAAG,oBACD,CAAE,WAAYd,EAAS,KAAOV,EAASmB,SAE3CM,QAAS,kBAAMd,EAAY,CAACX,EAASmB,OAAQT,EAAS,MANxD,4BAWA,wBACEG,KAAK,SACLU,UACEC,IAAG,oBACD,CAAE,WAAYd,EAAS,KAAOV,EAASoB,UAE3CK,QApCU,kBAAMd,EACtBD,EAAS,KAAOV,EAASoB,QACrB,CAACV,EAAS,GAAIV,EAASS,SACvB,CAACC,EAAS,GAAIV,EAASoB,WA2BvB,qBAWEE,GACA,wBACET,KAAK,SACLU,UAAU,4BACVE,QAAS,kBAAMd,EAAY,CAACX,EAASS,QAAST,EAASS,WAHzD,sBAUJ,cAAC,EAAD,CAAWP,MAAOU,QErGxBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fccf246a.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { SortGoods } from './components/SortGoods/SortGoods';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  az = 'az',\n  length = 'length',\n  reverse = 'reverse',\n  default = '',\n}\n\nfunction getSortedGoods(goods: string[], type: SortType[]) {\n  const sortedGoods = [...goods];\n\n  if (type[0] === SortType.az) {\n    sortedGoods.sort((good1, good2) => good1.localeCompare(good2));\n  }\n\n  if (type[0] === SortType.length) {\n    sortedGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (type[1] === SortType.reverse) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType]\n  = React.useState<SortType[]>([SortType.default, SortType.default]);\n  const sortedGoods = getSortedGoods(goodsFromServer, sortType);\n\n  const isReset = sortType[0] !== SortType.default\n    || sortType[1] !== SortType.default;\n\n  const isReverse = () => setSortType(\n    sortType[1] === SortType.reverse\n      ? [sortType[0], SortType.default]\n      : [sortType[0], SortType.reverse],\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn('button is-info', { 'is-light': sortType[0] !== SortType.az })\n          }\n          onClick={() => setSortType([SortType.az, sortType[1]])}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-success',\n              { 'is-light': sortType[0] !== SortType.length })\n          }\n          onClick={() => setSortType([SortType.length, sortType[1]])}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn('button is-warning',\n              { 'is-light': sortType[1] !== SortType.reverse })\n          }\n          onClick={isReverse}\n        >\n          Reverse\n        </button>\n\n        {(isReset) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => setSortType([SortType.default, SortType.default])}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <SortGoods goods={sortedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const SortGoods: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>{good}</li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}